#==================================================
#コマンド設定基礎
#==================================================
#全体設定
#--------------------------------------------------
#set-option [-agu] [-t target-session] option value
#   (別名: set) セッションオプションを設定します。
#   -a ありで、オプションが文字列を受け付けるなら value は既存の設定に追加されます。
#   -g が指定された場合、グローバルなセッションオプションに設定されます。
#   -u フラグはオプションの設定を解除し、 セッションはそのオプションをグローバルオプションから引き継ぎます。 
#   グローバルオプションの設定を解除することはできません。
#
#set-window-option [-agu] [-t target-window] option value
#   (別名: setw) ウィンドウオプションを設定します。
#   -a, -g, -u フラグは set-option コマンドと同じように動作します。
#
#
#--------------------------------------------------
#キーバインド設定
#--------------------------------------------------
#bind-key [-cnr] [-t key-table] key command [arguments]
#   (別名: bind) キー key を command に割り当てます。
#   キーは Ctrl キーとして 'C-' または '^' を、 Alt (meta) キーとして 'M-' を先頭に指定できます。
#   デフォルト (-t なし) では (普通プレフィックスキーでアクティブになる) プライマリキーバインドが変更され、
#   このケースで -n が指定された場合、 プレフィックスキーは使わなくてもよくなり、
#   コマンドは単独のキーに割り当てられます。
#   -r フラグはこのキーをリピートできるようにします。
#      repeat-time オプションを参照してください。
#   
#   -t が与えられた場合、
#   key は key-table 内に割り当てられ、
#   -c ありでコマンドモード用に、
#   -c なしでノーマルモード用になります。
#   デフォルトの割り当てと使えるコマンドを観るには list-keys コマンドを観てください。
#
#
#list-keys [-t key-table]
#   (別名: lsk) 全てのキーバインドを列挙します。
#   -t なしだとプライマリキーバインド
#      ―これらはプレフィックスキーに続いたときに実行される― が出力されます。
#      プレフィックスキーなしで割り当てられたキー (bind-key -n を参照) は角括弧で囲まれます。
#
#   -t ありだと key-table 内のキーバインドが列挙され、
#      これは vi-edit, emacs-edit, vi-choice, emacs-choice, vi-copy, emacs-copy のいずれかです。
#
#send-keys [-t target-pane] key ...
#   (別名: send) ウィンドウに 1 つ以上のキーを送信します。
#   各引数 key は ('C-a' や 'npage' のような) キー名で、
#   文字列がキーとして認識できなければ、
#   一連の文字群として送信されます。
#   全引数は最初から最後まで連続的に送信されます。
#
#send-prefix [-t target-pane]
#   プレフィックスキーを、それが押されたものとしてウィンドウに送信します。
#
#unbind-key [-cn] [-t key-table] key
#   (別名: unbind) key に割り当てられたコマンドを解除します。 
#   -t なしだとプライマリキーバインドが変更され、
#      このケースで -n が指定された場合、
#      プレフィックスなしで key に割り当てられたコマンドが(あれば)取り除かれます。
#   
#   -t が与えられた場合、
#      -c ありでコマンドモード用の、
#      -c なしでノーマルモード用の key が key-table から解除されます。
#
#==================================================
#Global Option
#==================================================

#Escキーの遅延待ち時間を0秒にする
#http://d.hatena.ne.jp/tacahiroy/20111206/1323123603
set -s escape-time 0

#
set -g default-terminal xterm-256color

# zshでpbcopy
set -g default-command "reattach-to-user-namespace -l zsh"

#==================================================
#Window Option
#==================================================
## ウィンドウ番号を1から開始
#set -g base-index 1

#スクロールモード、コピーモード、選択モードで vi または emacs スタイルのキーバインドを使います。 キーバインドのデフォルトは emacs です。
setw -g mode-keys vi

#ウィンドウの自動リネームを制御します。
#set-w -g automatic-rename off

#==================================================
#Key Bind Option
#==================================================
## 既定のPrefixキー(Ctrl+b)の割り当てを解除
unbind C-b
### Ctrl+xをPrefixキーにする
set -g prefix C-x
bind C-x send-prefix

# screen ^C c
unbind ^C
bind ^C new-window -n zsh
bind c new-window -n zsh

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# copy-mode ^[
unbind ^"["
bind -r ^"[" copy-mode
unbind ^]
bind -r ^] paste-buffer

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^?
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind \
bind \ confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^R r
unbind ^R
bind ^R refresh-client
unbind r
bind r refresh-client

# split -v |
unbind |
bind | split-window

# :kB: focus up
unbind Tab
bind Tab select-pane -t :.-
unbind BTab
bind BTab select-pane -t :.+
unbind ^H
bind ^H select-pane -t :.-
unbind h
bind ^h select-pane -t :.-
unbind ^L
bind ^L select-pane -t :.+
unbind l
bind l select-pane -t :.+

# " windowlist -b
unbind '"'
bind '"' choose-window

#==================================================
#Encoding
#==================================================
## UTF-8を用いるかどうかはロケールから自動検出される(必要のある場合のみ指定)
##set -g utf8 on
##set -g status-utf8 on

#==================================================
#Buffer Option
#==================================================
## バッファ上限数(既定値は9で0番-8番)
#set-option -g buffer-limit 32

#==================================================
#History Option
#==================================================
## 後方スクロール行数(既定値は2000)
set -g history-limit 4096

#==================================================
#Mouse Option
#==================================================
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

#==================================================
#Status Line Option
#==================================================
#指定できる値の形式には色と属性の2種類があり
#色については
#black(黒),red(赤),green(緑),yellow(黄),blue(青),magenta(マゼンタ),cyan(シアン),white(白)
#属性については
#brightもしくはbold(明るい/太字),dim(暗い),underscore(下線),blink(点滅),reverse(反転),hidden(隠す/非表示にする),italics(イタリック)
#のいずれか、もしくは「default」(書式リセット)を指定できる。書式は一度指定すると後ろに続く文字列に対して「default」でリセットするまで保持される。
#「blink」や「hidden」などの一部の属性は端末エミュレータによってはうまく動作しないことがある。
#status-fg
#status-bg
#status-attr
#により、既定の色と属性を設定できる。同様にしてstatus-left-*やstatus-right-*でウィンドウ一覧の左右のステータス表示部分を個別に指定することもできるが、左右それぞれの書式設定部分でも直接色や属性を変更する記述はできる。

#ウィンドウ一覧部分の表示スタイルのウィンドウ(仮想画面)ごとの設定として
#window-status-fg
#window-status-bg
#window-status-attr
#と
#window-status-current-fg
#window-status-current-bg
#window-status-current-attr
#があり、前半の3つは非アクティブなウィンドウ、後半の3つはアクティブなウィンドウに関する表示をそれぞれ変更する。fg,bg,attrは先述のstatus-*と同様の書式で設定する。

# Status Line · zolrath/wemux Wiki : https://github.com/zolrath/wemux/wiki/Status-Line
# Macでtmuxのステータスラインに起動時間/ロードアベレージ/メモリ使用率を表示
# よんちゅBlog : http://d.hatena.ne.jp/yonchu/20120414/1334422075

#status
set -g status on
set -g status-interval 1
set -g status-justify "left"
set -g status-bg colour234
set -g status-fg white
set -g status-attr dim
set -g status-left-length 50
set -g status-right-length 150
set -g window-status-activity-attr bold

# #(コマンド)  コマンドの出力の 1 行目
# #[属性]  色または属性の変更
# #H ローカルホストのホスト名
# #I カレントウィンドウ番号
# #P カレントペイン番号
# #S セッション名
# #T カレントウィンドウタイトル
# #W カレントウィンドウ名
# ## リテラルの '#'
set -g status-left '#[fg=colour22,bg=colour154,bold]#(hostname -s)#[deafult] #S:#I:#P #[fg=colour154,bg=colour238,nobold]⮀#[fg=white,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
set -g status-right '#[fg=colour123,bg=colour234]⮂#[fg=colour12,bg=colour123,bold]up #(pc-running-time) Mem #(used-mem)%% ⮃ LAve.[#(loadaverage)] #[fg=colour27,bg=colour123]⮂#[fg=colour255,bg=colour27,bold] #H %Y/%m/%d(%a)%H:%M:%S#[default]'

#window-status
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,bold]⮀"

#pane
#set -g pane-border-fg colour245
#set -g pane-active-border-fg colour39

#message
set -g message-attr bold
set -g message-fg white
set -g message-bg red
