"------------------------------------------
"zen-coding.vim
"------------------------------------------
let g:user_zen_settings = {
\       'lang' : 'ja',
\}
"let g:user_zen_leader_key = '<c><Space>'

"------------------------------------------
"project.vim
"------------------------------------------
"プロジェクトのトグル開閉
nmap <silent> <Leader>P <Plug>ToggleProject
"デフォルトのプロジェクトを開く
nmap <silent> <Leader>p :Project<CR>

"------------------------------------------
"buftabs.vim
"------------------------------------------
"ファイル名だけ表示
let buftabs_only_basename = 1
"ステータスラインに表示
"let buftabs_in_statusline = 1

"------------------------------------------
"bufexplorer.vim
"------------------------------------------
"ヘルプを常に表示
"let bufExplorerDetailedHelp = 1

"------------------------------------------
"nginx.vim
"------------------------------------------
au BufRead,BufNewFile /etc/nginx/* setlocal ft=nginx

"------------------------------------------
"indent-guides
"------------------------------------------
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_color_change_percent = 30
let g:indent_guides_guide_size = 1

"------------------------------------------
"vim-powerline
"------------------------------------------
let g:Powerline_symbols='fancy'

"------------------------------------------
"vim-ref
"------------------------------------------
let g:ref_source_webdict_sites = {
\   'je': {
\     'url': 'http://dictionary.infoseek.ne.jp/jeword/%s',
\   },
\   'ej': {
\     'url': 'http://dictionary.infoseek.ne.jp/ejword/%s',
\   },
\   'wiki': {
\     'url': 'http://ja.wikipedia.org/wiki/%s',
\   },
\ }


"デフォルトサイト
let g:ref_source_webdict_sites.default = 'ej'

"出力に対するフィルタ。最初の数行を削除
function! g:ref_source_webdict_sites.je.filter(output)
  return join(split(a:output, "\n")[15 :], "\n")
endfunction
function! g:ref_source_webdict_sites.ej.filter(output)
  return join(split(a:output, "\n")[15 :], "\n")
endfunction
function! g:ref_source_webdict_sites.wiki.filter(output)
  return join(split(a:output, "\n")[17 :], "\n")
endfunction

nmap <Leader>rj :<C-u>Ref webdict je<Space>
nmap <Leader>re :<C-u>Ref webdict ej<Space>

"------------------------------------------
"smartchr
"------------------------------------------
"inoremap <expr> = smartchr#loop(' = ', '=', ' == ')

"------------------------------------------
" taglist
"------------------------------------------
let Tlist_Ctags_Cmd='/usr/local/bin/ctags'
let g:SrcExpl_updateTagsCmd = "/usr/local/bin/ctags --sort=foldcase -R ."
